%{
    #include <stdio.h>
    #include <stdlib.h>
    #include <assert.h>
    #include <string.h>
    #include "codegen.h"

    #define CHECK_NUM "test $1, %s\njnz raisesig\n"

    registers_t registers = { .regnames = {"%rdi", "%rsi", "%rdx", "%rcx", "%r8", "%r9"}, .regs_used = 0, .varnames = {NULL, NULL, NULL, NULL, NULL, NULL}};
%}
%start reg
%term ASSIGN=1 CONSTANT=2 VARDEF=3 RET=4 ADD=5 MUL=6 VARUSE=7

%%
con:    CONSTANT            # 0
reg:    VARDEF              # 0 # NEWVAR(bnode);
reg:    VARUSE              # 0 # SET_VARREG(bnode)

reg:    con                 # 1 # NEWREG(bnode) printf("movq $%u, %s\nshlq $1, %s\n", kids[0]->val, bnode->regname, bnode->regname);

reg:    RET(con)            # 1 # printf("movq $%u, %%rax\nshlq $1, %%rax\nret\n", kids[0]->val);
reg:    RET(reg)            # 1 # printf("movq %s, %%rax\nret\n", kids[0]->regname); FREEREG(1)

reg:    ADD(reg, reg)       # 2 # NEWREG(bnode) printf(CHECK_NUM CHECK_NUM "movq %s, %s\naddq %s, %s\n",kids[0]->regname, kids[1]->regname, kids[0]->regname, bnode->regname, kids[1]->regname, bnode->regname); FREEREG(2)